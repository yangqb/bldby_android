apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion "29.0.3"

    signingConfigs {
        release {
            keyAlias 'feitianzhu'
            keyPassword 'kaisa008'
            storeFile file('../key/feitianzhu.jks')
            storePassword 'kaisa008'
        }
        debug {
            /*keyAlias 'feitianzhu'
            keyPassword 'kaisa008'
            storeFile file('../key/feitianzhu.jks')
            storePassword 'kaisa008'*/
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('../key/debug.keystore')
            storePassword 'android'
        }
    }

    defaultConfig {
        applicationId "com.feitianzhu.huangliwo"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        multiDexEnabled true
        signingConfig signingConfigs.release

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi'
            abiFilters 'x86'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    repositories {
        flatDir {
            dirs 'libs' // aar目录
        }
    }

    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures{
        dataBinding = true
// for view binding :
// viewBinding = true
    }
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.contains('release')) {
                        def fileName = "bldby-${variant.name}-v${variant.versionName}-v${variant.versionCode}.apk"
                        outputFileName = fileName
                    } else if (outputFile != null && outputFile.name.contains('debug')) {
                        def fileName = "bldby-${variant.name}-v${variant.versionName}-v${variant.versionCode}.apk"
                        outputFileName = fileName
                    }
            }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'android.arch.navigation:navigation-fragment:1.0.0'
    implementation 'android.arch.navigation:navigation-ui:1.0.0'
    implementation 'android.arch.lifecycle:extensions:1.1.1'

//基类依赖library
    implementation project(path: ':baselibrary')
    //组件library
    if (!rootProject.ext.isShopApplication) {
        implementation project(path: ':shoplibrary')
    }
    if (!rootProject.ext.isLoginApplication) {
        implementation project(path: ':loginlibrary')
    }
    if (!rootProject.ext.isTravelApplication) {
        implementation project(path: ':travellibrary')
    }
    annotationProcessor rootProject.ext.dependencies["router-compiler"]
}