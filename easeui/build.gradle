if (rootProject.ext.isIMApplication) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        if (rootProject.ext.isIMApplication) {
            //组件模式下设置applicationId
            applicationId "com.hyphenate.easeui"
        }
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        consumerProguardFiles "consumer-rules.pro"
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi'
            abiFilters 'x86'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        dataBinding = true
// for view binding :
// viewBinding = true
    }

    sourceSets {
        main {
            if (rootProject.ext.isIMApplication) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}

dependencies {
    //release时需要把hyphenatechatsdk的依赖注释掉，sdk已经被打成jar包放在libs底下
//    //api project(':hyphenatechatsdk')
    //api 'com.hyphenate:hyphenate-sdk:3.6.7'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.github.bumptech.glide:glide:4.8.0'

    implementation 'com.google.android.gms:play-services-base:11.4.0'
    implementation project(path: ':loginlibrary')
    implementation project(path: ':baselibrary')
    annotationProcessor rootProject.ext.dependencies["router-compiler"]
}
